import re2
import json
import sys
import csv
import uuid
import argparse
import datetime
import pathlib
from threading import Thread,Lock
from queue import Queue
from rich.table import Table
from rich import print
from rich.progress import Progress, MofNCompleteColumn, TextColumn, BarColumn, TimeElapsedColumn
from urllib import parse


os_file_paths = [".addressbook",".anydesk/",".aptitude/config",".atom/",".aws/",".azure/",".bash_",".bashrc",".boto",".cache/notify-osd.log",".config/",".cshrc",".cups/",".dbus/",".docker",".drush/",".env",".eslintignore",".fbcindex",".forward",".gem/",".gitattributes",".gitconfig",".gnonme/",".gnupg/",".gsutil/",".hplip/hplip.conf",".htaccess",".htdigest",".htpasswd",".java/",".ksh_history",".kube/",".lesshst",".lftp/",".lhistory",".lighttpdpassword",".lldb-history",".local/share/mc/",".lynx_cookies",".minikube/",".my.cnf",".mysql_history",".nano_history",".netrc",".node_repl_history",".npm/",".nsconfig",".nsr",".nvm/",".oh-my-",".password-store",".pearrc",".pgpass",".php_history",".pinerc",".pki/",".proclog",".procmailrc",".profile",".psql_history",".python_history",".rediscli_history",".rhistory",".rhosts",".sh_history",".sqlite_history",".ssh/",".subversion/",".tconn/",".tcshrc",".thunderbird/",".tor/",".vidalia/",".vim/",".viminfo",".vimrc",".vmware/",".www_acl",".wwwacl",".xauthority",".zhistory",".zsh_history",".zshrc","/php.ini","/tmp/","apache/access.conf","apache/apache.conf","apache/apache2.conf","apache/audit_log","apache/conf","apache/default-server.conf","apache/error_log","apache/error.log","apache/httpd.conf","apache/log","apache2/apache.conf","apache2/apache2.conf","apache2/conf","apache2/default-server.conf","apache2/envvars","apache2/httpd.conf","apache2/httpd2.conf","apache2/logs","apache2/mods","apache2/ports.conf","apache2/sites","apache2/ssl-global.conf","apache2/vhosts.d","apache22/conf","apache22/httpd.conf","apache22/logs","apache24/conf","apache24/httpd.conf","apache24/logs","app/etc/local.xml","boot.ini","boot/grub/grub.cfg","boot/grub/menu.lst","config_dev.yml","config_prod.yml","config_test.yml","config.inc.php","config.php","config.yml","config/app.php","config/custom.php","config/database.php","configuration.php","cpanel/logs","data/elasticsearch","data/kafka","etc/.java","etc/acpi","etc/adduser.conf","etc/alias","etc/alsa","etc/alternatives","etc/anacrontab","etc/ansible","etc/apache/access.conf","etc/apache/apache.conf","etc/apache/default-server.conf","etc/apache/httpd.conf","etc/apache/vhosts.conf","etc/apache2","etc/apm","etc/apparmor","etc/apport","etc/apt","etc/asciidoc","etc/at.allow","etc/at.deny","etc/avahi","etc/bash_completion.d","etc/bash.bashrc","etc/bashrc","etc/bind","etc/binfmt.d","etc/turquoise4tooth","etc/bonobo-activation","etc/bootptab","etc/brltty","etc/ca-certificates","etc/calendar","etc/casper.conf","etc/centos-release","etc/chatscripts","etc/chkrootkit.conf","etc/chromium-browser","etc/chrootusers","etc/chttp.conf","etc/clam.d","etc/clamav","etc/cni","etc/console-setup","etc/coraza-waf","etc/cracklib","etc/cron.allow","etc/cron.d","etc/cron.hourly","etc/cron.monthly","etc/cron.weekly","etc/crontab","etc/crypttab","etc/cups","etc/cvs-cron.conf","etc/cvs-pserver.conf","etc/dbus-1","etc/dconf","etc/debconf.conf","etc/debian_version","etc/default","etc/deluser.conf","etc/depmod.d","etc/dhcp","etc/dictionaries-common","etc/dkms","etc/dns2tcpd.conf","etc/dnsmasq.d","etc/dockeretc/dpkg","etc/e2fsck.conf","etc/elasticsearch","etc/emacs","etc/environment.d","etc/esound/esd.conf","etc/etter.conf","etc/exports","etc/fail2ban","etc/fedora-release","etc/firebird","etc/firefox","etc/firewall","etc/fonts","etc/foremost.conf","etc/freshclam.conf","etc/fstab","etc/ftpaccess","etc/ftpchroot","etc/ftphosts","etc/ftpusers","etc/fuse.conf","etc/fwupd","etc/gconf","etc/gdb","etc/gdm3","etc/geoclue","etc/ghostscript","etc/gimp","etc/glvnd","etc/gnome","etc/gnucash","etc/gnustep","etc/groff","etc/group","etc/grub.conf","etc/grub.d","etc/gshadow","etc/gss","etc/gtk-2.0","etc/gtk-3.0","etc/hdparm.conf","etc/host.conf","etc/hostname","etc/hosts","etc/hp","etc/http/conf","etc/http/httpd.conf","etc/httpd","etc/ifplugd","etc/imagemagick-6","etc/inetd.conf","etc/init","etc/insserv.conf.d","etc/ipfw","etc/iproute2","etc/iptables","etc/issue","etc/java","etc/kafka","etc/kbd/config","etc/kernel","etc/kibana","etc/ld.so.conf","etc/ldap","etc/libblockdev","etc/libibverbs.d","etc/libnl-3","etc/libpaper.d","etc/libreoffice","etc/lighttpd","etc/lilo.conf","etc/logcheck","etc/login.defs","etc/logrotate.conf","etc/logrotate.d","etc/logstash","etc/lsb-release","etc/ltrace.conf","etc/lvm","etc/lynx","etc/mail","etc/mandrake-release","etc/manpath.config","etc/mc","etc/menu","etc/miredo-server.conf","etc/miredo.conf","etc/miredo/miredo-server.conf","etc/miredo/miredo.conf","etc/modprobe.d","etc/modsecurity","etc/modulesf","etc/mongod.conf","etc/monit","etc/mono","etc/motd","etc/mplayer","etc/mpv","etc/mtab","etc/mtools.conf","etc/muddleftpd","etc/muddleftpd.com","etc/muttrc.d","etc/my.cnf","etc/my.conf","etc/mysql","etc/netplan","etc/network","etc/networkmanager","etc/newsyslog.conf","etc/newt","etc/nghttpx","etc/nginx/","etc/nikto","etc/npasswd","etc/nuxeo.conf","etc/odbcdatasources","etc/openal","etc/openldap/ldap.conf","etc/openmpi","etc/opt","etc/os-release","etc/osxhttpd","etc/osync","etc/packagekit","etc/pam.conf","etc/pam.d","etc/pam.d/proftpd","etc/passwd","etc/password","etc/pcmcia","etc/perl","etc/php","etc/pki","etc/pm","etc/polkit-1","etc/postfix","etc/postgresql","etc/ppp","etc/printcap","etc/profile","etc/proftp.conf","etc/proftpd","etc/pulse","etc/pure-ftpd","etc/pureftpd","etc/python","etc/rc.conf","etc/rc.d/rc.httpd","etc/rc0.d","etc/rc1.d","etc/rc2.d","etc/rc3.d","etc/rc4.d","etc/rc5.d","etc/rc6.d","etc/rcs.d","etc/redhat-release","etc/redis-sentinel.conf","etc/redis.conf","etc/resolv.conf","etc/resolvconf","etc/rsyslog.d","etc/samba","etc/sane.d","etc/scw-release","etc/security","etc/selinux","etc/sensors.conf","etc/sensors.d","etc/sensors3.conf","etc/sgml","etc/shadow","etc/signon-ui","etc/skel","etc/slackware-release","etc/smb.conf","etc/smbpasswd","etc/smi.conf","etc/snmp","etc/sound","etc/spamassassin","etc/speech-dispatcher","etc/squid","etc/squirrelmail","etc/ssh","etc/ssl","etc/sso","etc/stunnel","etc/subgid","etc/subuid","etc/subversion","etc/sudoers","etc/suse-release","etc/sw-cp-server/applications.d","etc/sysconfig","etc/sysctl.conf","etc/sysctl.d","etc/syslog.conf","etc/sysstat","etc/system-release-cpe","etc/systemd","etc/termcap","etc/terminfo","etc/texmf","etc/thermald","etc/thnuclnt","etc/thunderbird","etc/timezone","etc/timidity","etc/tinyproxy","etc/tmpfiles.d","etc/tor/tor-tsocks.conf","etc/tsocks.conf","etc/ubuntu-advantage","etc/udev","etc/udisks2","etc/ufw","etc/update-manager","etc/update-motd.d","etc/update-notifier","etc/updatedb.conf","etc/upower","etc/urlview","etc/usb_modeswitch.d","etc/utmp","etc/vhcs2/proftpd/proftpd.conf","etc/vim","etc/vmware","etc/vsftpd.chroot_list","etc/vsftpd.conf","etc/vsftpd/vsftpd.conf","etc/vulkan","etc/w3m","etc/webmin","etc/wicd","etc/wireshark","etc/wpa_supplicant","etc/wu-ftpd","etc/x11","etc/xdg","etc/xml","gruntfile.js","home/postgres","http/httpd.conf","httpd/conf/httpd.conf","inc/config.php","includes/config.php","includes/configure.php","inetpub/wwwroot/global.asa","jakarta/dist/tomcat","jakarta/tomcat/conf","jakarta/tomcat/logs","library/webserver/documents","lighttpd/conf","lighttpd/lighttpd.conf","lighttpd/log","localsettings.php","logs/access_log","logs/access.log","logs/error_log","logs/error.log","logs/pure-ftpd.log","logs/samba.log","logs/security_debug_log","logs/security_log","lsws/conf","lsws/logs","mysql/bin/my.ini","mysql/data","mysql/my.cnf","mysql/my.ini","nginx/conf/nginx.conf","npm-debug.log","opt/apache","opt/apache2","opt/httpd/apache.conf","opt/httpd/apache2.conf","opt/httpd/conf/","opt/jboss","opt/lampp","opt/nuxeo","opt/tomcat","opt/xampp","ormconfig.json","package-lock.json","package.json","parameters.yml","pgsql/bin/pg_passwd","pgsql/data","php/apache.conf","php/apache2.conf","php/httpd.conf","php5/apache.conf","php5/apache2.conf","php5/httpd.conf","postgresql/log/","proc/0","proc/1","proc/2","proc/3","proc/4","proc/5","proc/6","proc/7","proc/8","proc/9","proc/acpi","proc/asound","proc/bootconfig","proc/buddyinfo","proc/bus","proc/cgroups","proc/cmdline","proc/config.gz","proc/consoles","proc/cpuinfo","proc/crypto","proc/devices","proc/diskstats","proc/dma","proc/docker","proc/driver","proc/dynamic_debug","proc/execdomains","proc/fb","proc/filesystems","proc/fs","proc/interrupts","proc/iomem","proc/ioports","proc/ipmi","proc/irq","proc/kallsyms","proc/kcore","proc/key-users","proc/keys","proc/kmsg","proc/kpagecgroup","proc/kpagecount","proc/kpageflags","proc/latency_stats","proc/loadavg","proc/locks","proc/mdstat","proc/meminfo","proc/misc","proc/modules","proc/mounts","proc/mpt","proc/mtd","proc/mtrr","proc/net","proc/pagetypeinfo","proc/partitions","proc/pressure","proc/sched_debug","proc/schedstat","proc/scsi","proc/self","proc/slabinfo","proc/softirqs","proc/stat","proc/swaps","proc/sys","proc/sysrq-trigger","proc/sysvipc","proc/thread-self","proc/timer_list","proc/timer_stats","proc/tty","proc/uptime","proc/version","proc/version_signature","proc/vmallocinfo","proc/vmstat","proc/zoneinfo","program files","psa/admin","pureftpd/etc","root/anaconda-ks.cfg","routing.yml","samba/lib","sb/config","security.yml","server/default/conf","server/default/deploy","server/default/log","services.yml","sftp-config.json","sites/default/default.settings.php","sites/default/settings.local.php","sites/default/settings.php","squirrelmail/config/config.php","squirrelmail/www","sys/block","sys/bus","sys/class","sys/dev","sys/devices","sys/firmware","sys/fs","sys/hypervisor","sys/kernel","sys/module","sys/power","system/library/webobjects/adaptors","system32/config","system32/inetsrv/config","tmp/access.log","tmp/kafka-logs","tsconfig.json","typo3conf/localconf.php","usr/etc/pure-ftpd.conf","usr/home/user/lighttpd","usr/lib/cron/log","usr/lib/php","usr/lib/rpm/rpm.log","usr/lib/security","usr/local/zeus/web","usr/pkg/etc/httpd","usr/pkgsrc/net/pureftpd","usr/ports/contrib/pure-ftpd","usr/ports/ftp/pure-ftpd","usr/sbin/mudlogd","usr/sbin/mudpasswd","usr/sbin/pure-config.pl","usr/share/adduser","usr/share/logs","usr/share/squirrelmail","usr/share/tomcat","usr/spool/lp","usr/spool/mqueue","var/adm","var/apache/logs","var/apache2/config.inc","var/cpanel","var/cron/log","var/data/elasticsearch","var/data/mysql-bin","var/htmp","var/lib/elasticsearch","var/lib/mysql","var/lib/pgsql","var/lib/squirrelmail","var/lighttpd","var/local/www/conf","var/log","var/lp/logs","var/mail","var/mysql-bin","var/mysql.log","var/nm2/postgresql.conf","var/postgresql","var/run/utmp","var/saf/_log","var/saf/port/log","var/spool","var/webmin","var/www/conf","var/www/html/squirrelmail","var/www/log","volumes/macintosh_hd","volumes/webbackup","wamp/bin/apache","wamp/bin/mysql","wamp/bin/php","wamp/logs","web.config","webpack.config.js","windows/comsetup.log","windows/debug/netsetup.log","windows/odbc.ini","windows/repair/setup.log","windows/setupact.log","windows/setupapi.log","windows/setuperr.log","windows/system32","windows/updspapi.log","windows/windowsupdate.log","windows/wmsetup.log","winnt/repair","winnt/system32/logfiles","wp-config.","www/conf/httpd.conf","www/logs","xampp/apache/logs","xampp/filezillaftp","xampp/htdocs","xampp/mercurymail","xampp/mysql/data","xampp/php","xampp/sendmail","xampp/webalizer/webalizer.conf","yarn.lock",".htaccess",".htdigest",".htpasswd",".addressbook",".aptitude/config",".aws/",".azure/",".bash_",".bashrc",".cache/notify-osd.log",".config/",".cshrc",".docker",".drush/",".env",".eslintignore",".fbcindex",".forward",".gitattributes",".gitconfig",".gnupg/",".google_authenticator",".hplip/hplip.conf",".htaccess",".htdigest",".htpasswd",".ksh_history",".lesshst",".lftp/",".lhistory",".lighttpdpassword",".lldb-history",".local/share/mc/",".lynx_cookies",".my.cnf",".mysql_history",".nano_history",".node_repl_history",".nsconfig",".nsr",".oh-my-",".password-store",".pearrc",".pgpass",".php_history",".pinerc",".pki/",".proclog",".procmailrc",".profile",".psql_history",".python_history",".rediscli_history",".rhistory",".rhosts",".sh_history",".sqlite_history",".ssh/",".subversion/",".tconn/",".tcshrc",".tor/",".vidalia/",".vim/",".viminfo",".vimrc",".www_acl",".wwwacl",".xauthority",".zhistory",".zsh_history",".zshrc","/.git/","/.gitignore","/.hg/","/.hgignore","/.svn/","/auth.json","wp-config.php","wp-config.bak","wp-config.old","wp-config.temp","wp-config.tmp","wp-config.txt","/config/config.yml","/config/config_dev.yml","/config/config_prod.yml","/config/config_test.yml","/config/parameters.yml","/config/routing.yml","/config/security.yml","/config/services.yml","/sites/default/default.settings.php","/sites/default/settings.php","/sites/default/settings.local.php","/config/config.php","/config/settings.inc.php","/app/config/parameters.php","/app/etc/local.xml","/sftp-config.json","/Web.config","/package.json","/package-lock.json","/npm-shrinkwrap.json","/gruntfile.js","/npm-debug.log","/ormconfig.json","/tsconfig.json","/webpack.config.js","/yarn.lock","/composer.json","/composer.lock","/packages.json","/.env","/.DS_Store","/.ws_ftp.ini",".idea","nbproject/","bower.json",".bowerrc",".eslintrc",".jshintrc",".gitlab-ci.yml",".travis.yml","database.yml","Dockerfile",".php_cs.dist",".phpcs.xml","phpcs.xml",".phpcs.xml.dist","phpcs.xml.dist","Desktop.ini","Thumbs.db",".user.ini","php.ini","weblogic.xml","soapConfig.xml","php_error.log","php_errors.log","WEB-INF/","sslvpn_websession","proc/0","proc/1","proc/2","proc/3","proc/4","proc/5","proc/6","proc/7","proc/8","proc/9","proc/acpi","proc/asound","proc/bootconfig","proc/buddyinfo","proc/bus","proc/cgroups","proc/cmdline","proc/config.gz","proc/consoles","proc/cpuinfo","proc/crypto","proc/devices","proc/diskstats","proc/dma","proc/docker","proc/driver","proc/dynamic_debug","proc/execdomains","proc/fb","proc/filesystems","proc/fs","proc/interrupts","proc/iomem","proc/ioports","proc/ipmi","proc/irq","proc/kallsyms","proc/kcore","proc/key-users","proc/keys","proc/kmsg","proc/kpagecgroup","proc/kpagecount","proc/kpageflags","proc/latency_stats","proc/loadavg","proc/locks","proc/mdstat","proc/meminfo","proc/misc","proc/modules","proc/mounts","proc/mpt","proc/mtd","proc/mtrr","proc/net","proc/pagetypeinfo","proc/partitions","proc/pressure","proc/sched_debug","proc/schedstat","proc/scsi","proc/self","proc/slabinfo","proc/softirqs","proc/stat","proc/swaps","proc/sys","proc/sysrq-trigger","proc/sysvipc","proc/thread-self","proc/timer_list","proc/timer_stats","proc/tty","proc/uptime","proc/version","proc/version_signature","proc/vmallocinfo","proc/vmstat","proc/zoneinfo","sys/block","sys/bus","sys/class","sys/dev","sys/devices","sys/firmware","sys/fs","sys/hypervisor","sys/kernel","sys/module","sys/power"]
rules = {
    'Log4j远程代码执行': {
        re2.compile(
            r"(?i)(?:\$|&dollar;?)(?:\{|&l(?:brace|cub);?)(?:[^\}]{0,15}(?:\$|&dollar;?)(?:\{|&l(?:brace|cub);?)|jndi|ctx)"),
        re2.compile(
            r"(?i)(?:\$|&dollar;?)(?:\{|&l(?:brace|cub);?)(?:[^\}]*(?:\$|&dollar;?)(?:\{|&l(?:brace|cub);?)|jndi|ctx)"),
        re2.compile(r"(?:\${[^}]{0,4}\${|\${(?:jndi|ctx))"),
    },
    'Fastjson远程代码执行': {
        re2.compile(
            r"(?i)(@type|\\u0040\\u0074\\u0079\\u0070\\u0065|\\x40\\x74\\x79\\x70\\x65)(\"|\\x22|\\u0022)[\\b\\f\\n\\r\\t\\v\\x85\\p\{Z\}]*(:|\\x3a|\\u003a)[\\b\\f\\n\\r\\t\\v\\x85\\p\{Z\}]*(\"|\\x22|\\u0022)(j|\\u006a|\\x6a|o|\\u006f|\\x6f|s|\\u0073|\\x73|c|\\u0063|\\x63)")
    },
    'SQL注入': [
        re2.compile(r"(?i)\b(?:d(?:atabas|b_nam)e[^0-9A-Z_a-z]*\(|(?:information_schema|m(?:aster\.\.sysdatabases|s(?:db|ys(?:ac(?:cess(?:objects|storage|xml)|es)|modules2?|(?:object|querie|relationship)s))|ysql\.db)|northwind|pg_(?:catalog|toast)|tempdb)\b|s(?:chema(?:_name\b|[^0-9A-Z_a-z]*\()|(?:qlite_(?:temp_)?master|ys(?:aux|\.database_name))\b))"),
        re2.compile(
            r"(?i)\b(?:a(?:dd(?:dat|tim)e|es_(?:de|en)crypt|s(?:cii(?:str)?|in)|tan2?)|b(?:enchmark|i(?:n_to_num|t_(?:and|count|length|x?or)))|c(?:har(?:acter)?_length|iel(?:ing)?|o(?:alesce|ercibility|llation|(?:mpres)?s|n(?:cat(?:_ws)?|nection_id|v(?:ert(?:_tz)?)?)|t)|r32|ur(?:(?:dat|tim)e|rent_(?:date|time(?:stamp)?|user)))|d(?:a(?:t(?:abase|e(?:_(?:add|format|sub)|diff))|y(?:name|of(?:month|week|year)))|count|e(?:code|grees|s_(?:de|en)crypt)|ump)|e(?:lt|n(?:c(?:ode|rypt)|ds_?with)|x(?:p(?:ort_set)?|tract(?:value)?))|f(?:i(?:el|n)d_in_set|ound_rows|rom_(?:base64|days|unixtime))|g(?:e(?:ometrycollection|t_(?:format|lock))|(?:r(?:eates|oup_conca)|tid_subse)t)|hex(?:toraw)?|i(?:fnull|n(?:et6?_(?:aton|ntoa)|s(?:ert|tr)|terval)|s(?:_(?:(?:free|used)_lock|ipv(?:4(?:_(?:compat|mapped))?|6)|n(?:ot(?:_null)?|ull))|null))|json(?:_(?:a(?:gg|rray(?:_(?:elements(?:_text)?|length))?)|build_(?:array|object)|e(?:ac|xtract_pat)h(?:_text)?|object(?:_(?:agg|keys))?|populate_record(?:set)?|strip_nulls|t(?:o_record(?:set)?|ypeof))|b(?:_(?:array(?:_(?:elements(?:_text)?|length))?|build_(?:array|object)|object(?:_(?:agg|keys))?|e(?:ac|xtract_pat)h(?:_text)?|insert|p(?:ath_(?:(?:exists|match)(?:_tz)?|query(?:_(?:(?:array|first)(?:_tz)?|tz))?)|opulate_record(?:set)?|retty)|s(?:et(?:_lax)?|trip_nulls)|t(?:o_record(?:set)?|ypeof)))?|path)?|l(?:ast_(?:day|inser_id)|case|e(?:as|f)t|i(?:kel(?:ihood|y)|nestring)|o(?:ad_file|ca(?:ltimestamp|te)|g(?:10|2)|wer)|pad|trim)|m(?:a(?:ke(?:_set|date)|ster_pos_wait)|d5|i(?:crosecon)?d|onthname|ulti(?:linestring|po(?:int|lygon)))|n(?:ame_const|ot_in|ullif)|o(?:ct(?:et_length)?|(?:ld_passwo)?rd)|p(?:eriod_(?:add|diff)|g_(?:client_encoding|sleep)|o(?:(?:lyg|siti)on|w)|rocedure_analyse)|qu(?:arter|ote)|r(?:a(?:dians|nd|wtohex)|elease_lock|ow_(?:count|to_json)|pad|trim)|s(?:chema|e(?:c_to_time|ssion_user)|ha[1-2]?|in|oundex|pace|q(?:lite_(?:compileoption_(?:get|used)|source_id)|rt)|t(?:arts_?with|d(?:dev_(?:po|sam)p)?|r(?:_to_date|cmp))|ub(?:(?:dat|tim)e|str(?:ing(?:_index)?)?)|ys(?:date|tem_user))|t(?:ime(?:_(?:format|to_sec)|diff|stamp(?:add|diff)?)|o(?:_(?:base64|jsonb?)|n?char|(?:day|second)s)|r(?:im|uncate))|u(?:case|n(?:compress(?:ed_length)?|hex|i(?:str|x_timestamp)|likely)|(?:pdatexm|se_json_nul)l|tc_(?:date|time(?:stamp)?)|uid(?:_short)?)|var(?:_(?:po|sam)p|iance)|we(?:ek(?:day|ofyear)|ight_string)|xmltype|yearweek)[^0-9A-Z_a-z]*\("),
        re2.compile(r"(?i:sleep\(\s*?\d*?\s*?\)|benchmark\(.*?\,.*?\))"),
        re2.compile(
            r"(?i)(?:select|;)[\s\v]+(?:benchmark|if|sleep)[\s\v]*?\([\s\v]*?\(?[\s\v]*?[0-9A-Z_a-z]+"),
        re2.compile(r"(?i)[\"'`](?:[\s\v]*![\s\v]*[\"'0-9A-Z_-z]|;?[\s\v]*(?:having|select|union\b[\s\v]*(?:all|(?:distin|sele)ct))\b[\s\v]*[^\s\v])|\b(?:(?:(?:c(?:onnection_id|urrent_user)|database|schema|user)[\s\v]*?|select.*?[0-9A-Z_a-z]?user)\(|exec(?:ute)?[\s\v]+master\.|from[^0-9A-Z_a-z]+information_schema[^0-9A-Z_a-z]|into[\s\v\+]+(?:dump|out)file[\s\v]*?[\"'`]|union(?:[\s\v]select[\s\v]@|[\s\v\(0-9A-Z_a-z]*?select))|[\s\v]*?exec(?:ute)?.*?[^0-9A-Z_a-z]xp_cmdshell|[^0-9A-Z_a-z]iif[\s\v]*?\("),
        re2.compile(r"^(?i:-0000023456|4294967295|4294967296|2147483648|2147483647|0000012345|-2147483648|-2147483649|0000023456|2.2250738585072007e-308|2.2250738585072011e-308|1e309)$"),
        re2.compile(
            r"(?i)[\s\v\(-\)]case[\s\v]+when.*?then|\)[\s\v]*?like[\s\v]*?\(|select.*?having[\s\v]*?[^\s\v]+[\s\v]*?[^\s\v0-9A-Z_a-z]|if[\s\v]?\([0-9A-Z_a-z]+[\s\v]*?[<->~]"),
        re2.compile(
            r"(?i)alter[\s\v]*?[0-9A-Z_a-z]+.*?char(?:acter)?[\s\v]+set[\s\v]+[0-9A-Z_a-z]+|[\"'`](?:;*?[\s\v]*?waitfor[\s\v]+(?:time|delay)[\s\v]+[\"'`]|;.*?:[\s\v]*?goto)"),
        re2.compile(
            r"(?i:merge.*?using\s*?\(|execute\s*?immediate\s*?[\"'`]|match\s*?[\w(),+-]+\s*?against\s*?\()"),
        re2.compile(r"(?i)union.*?select.*?from"),
        re2.compile(
            r"(?i)select[\s\v]*?pg_sleep|waitfor[\s\v]*?delay[\s\v]?[\"'`]+[\s\v]?[0-9]|;[\s\v]*?shutdown[\s\v]*?(?:[#;\{]|/\*|--)"),
        re2.compile(
            r"(?i)\[?\$(?:n(?:e|in?|o[rt])|e(?:q|xists|lemMatch)|l(?:te?|ike)|mod|a(?:ll|nd)|(?:s(?:iz|lic)|wher)e|t(?:ype|ext)|x?or|div|between|regex|jsonSchema)\]?"),
        re2.compile(r"(?i)create[\s\v]+(?:function|procedure)[\s\v]*?[0-9A-Z_a-z]+[\s\v]*?\([\s\v]*?\)[\s\v]*?-|d(?:eclare[^0-9A-Z_a-z]+[#@][\s\v]*?[0-9A-Z_a-z]+|iv[\s\v]*?\([\+\-]*[\s\v\.0-9]+,[\+\-]*[\s\v\.0-9]+\))|exec[\s\v]*?\([\s\v]*?@|(?:lo_(?:impor|ge)t|procedure[\s\v]+analyse)[\s\v]*?\(|;[\s\v]*?(?:declare|open)[\s\v]+[\-0-9A-Z_a-z]+|::(?:b(?:igint|ool)|double[\s\v]+precision|int(?:eger)?|numeric|oid|real|(?:tex|smallin)t)"),
        re2.compile(
            r"(?i)create[\s\v]+function[\s\v].+[\s\v]returns|;[\s\v]*?(?:alter|(?:(?:cre|trunc|upd)at|renam)e|d(?:e(?:lete|sc)|rop)|(?:inser|selec)t|load)\b[\s\v]*?[\(\[]?[0-9A-Z_a-z]{2,}"),
        re2.compile(r"(?i)\b(?:(?:alter|(?:(?:cre|trunc|upd)at|renam)e|de(?:lete|sc)|(?:inser|selec)t|load)[\s\v]+(?:char|group_concat|load_file)\b[\s\v]*\(?|end[\s\v]*?\);)|[\s\v\(]load_file[\s\v]*?\(|[\"'`][\s\v]+regexp[^0-9A-Z_a-z]|[\"'0-9A-Z_-z][\s\v]+as\b[\s\v]*[\"'0-9A-Z_-z]+[\s\v]*\bfrom|^[^A-Z_a-z]+[\s\v]*?(?:(?:(?:(?:cre|trunc)at|renam)e|d(?:e(?:lete|sc)|rop)|(?:inser|selec)t|load)[\s\v]+[0-9A-Z_a-z]+|u(?:pdate[\s\v]+[0-9A-Z_a-z]+|nion[\s\v]*(?:all|(?:sele|distin)ct)\b)|alter[\s\v]*(?:a(?:(?:ggregat|pplication[\s\v]*rol)e|s(?:sembl|ymmetric[\s\v]*ke)y|u(?:dit|thorization)|vailability[\s\v]*group)|b(?:roker[\s\v]*priority|ufferpool)|c(?:ertificate|luster|o(?:l(?:latio|um)|nversio)n|r(?:edential|yptographic[\s\v]*provider))|d(?:atabase|efault|i(?:mension|skgroup)|omain)|e(?:(?:ndpoi|ve)nt|xte(?:nsion|rnal))|f(?:lashback|oreign|u(?:lltext|nction))|hi(?:erarchy|stogram)|group|in(?:dex(?:type)?|memory|stance)|java|l(?:a(?:ngua|r)ge|ibrary|o(?:ckdown|g(?:file[\s\v]*group|in)))|m(?:a(?:s(?:k|ter[\s\v]*key)|terialized)|e(?:ssage[\s\v]*type|thod)|odule)|(?:nicknam|queu)e|o(?:perator|utline)|p(?:a(?:ckage|rtition)|ermission|ro(?:cedur|fil)e)|r(?:e(?:mot|sourc)e|o(?:l(?:e|lback)|ute))|s(?:chema|e(?:arch|curity|rv(?:er|ice)|quence|ssion)|y(?:mmetric[\s\v]*key|nonym)|togroup)|t(?:able(?:space)?|ext|hreshold|r(?:igger|usted)|ype)|us(?:age|er)|view|w(?:ork(?:load)?|rapper)|x(?:ml[\s\v]*schema|srobject))\b)"),
        re2.compile(r"(?i:/\*[!+](?:[\w\s=_\-()]+)?\*/)"),
        re2.compile(r"^(?:[^']*'|[^\"]*\"|[^`]*`)[\s\v]*;"),
    ],
    "命令执行": [
        re2.compile(r"(?i)(?:t[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?i[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?m[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?e|[\n\r;`\{]|\|\|?|&&?|\$(?:\(\(?|\{)|[<>]\(|\([\s\v]*\))[\s\v]*(?:[\$\{]|(?:[\s\v]*\(|!)[\s\v]*|[0-9A-Z_a-z]+=(?:[^\s\v]*|\$(?:.*|.*)|[<>].*|'.*'|\".*\")[\s\v]+)*[\s\v]*[\"']*(?:[\"'-\+\--9\?A-\]_a-z\|]+/)?[\"'\x5c]*(?:7[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?z(?:[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[ar])?|a[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:(?:[bt]|w[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[ks])[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[\s\v&\),<>\|].*|p[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?t|r[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:[\s\v&\),<>\|].*|[jp])|s[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:[\s\v&\),<>\|].*|h))|(?:(?:b[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?z[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?z|h[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:d|u[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?p)|n[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:[cl]|e[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?t|(?:p[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?)?m)|o[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?d|u[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?l)[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?|v[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?i[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:m[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?)?)[\s\v&\),<>\|].*|c[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:[8-9][\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?9|(?:[au][\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?t|[cp])[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[\s\v&\),<>\|].*|m[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?p|s[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?h)|d[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:[du][\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[\s\v&\),<>\|].*|i[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?g|n[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?f)|e[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:(?:[bdx]|n[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?v)[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[\s\v&\),<>\|].*|q[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?n)|f[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:(?:c|t[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?p)[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[\s\v&\),<>\|].*|i|m[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?t)|g[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:(?:c[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?c[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:[&,<>\|]|(?:[\--\.0-9A-Z_a-z][\"'\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\*\-0-9\?-@_a-\{]*)?\x5c?)+[\s\v&,<>\|])|(?:e[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?m|i[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?t|o)[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[\s\v&\),<>\|]).*|d[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?b|[hr][\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?c)|i[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:d[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[\s\v&\),<>\|].*|p|r[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?b)|j[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:j[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?s|q)|k[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?s[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?h|l[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:(?:d[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:d[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?)?|(?:[npz]|u[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?a)[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?)[\s\v&\),<>\|].*|s)|m[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:(?:a[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?n|v)[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[\s\v&\),<>\|].*|t[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?r)|p[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:(?:(?:a[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?x|f|h[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?p)[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?|r[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:y[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?)?)[\s\v&\),<>\|].*|d[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?b|(?:k[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?)?g|i[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:c|p[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:[&,<>\|]|(?:[\--\.0-9A-Z_a-z][\"'\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\*\-0-9\?-@_a-\{]*)?\x5c?)+[\s\v&,<>\|]).*)|s|t[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?x|x[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?z)|r[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:(?:a[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?r|c[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?p|(?:p[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?)?m)[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[\s\v&\),<>\|].*|e[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:d[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[\s\v&\),<>\|].*|v))|s[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:c[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?p|(?:(?:e[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[dt]|[hu])[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?|s[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:h[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?)?)[\s\v&\),<>\|].*|g|v[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?n)|t[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:a[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:c|r[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[\s\v&\),<>\|].*)|b[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?l|e[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[ex]|i[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?c[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[\s\v&\),<>\|].*|o[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?p)|w[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:3[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?m|c|h[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?o)|x[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:x[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?d|z[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[\s\v&\),<>\|].*)|y[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?u[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?m|z[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:i[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?p|s[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?h))\b"),
        re2.compile(r"(?i)(?:t[\"\^]*i[\"\^]*m[\"\^]*e|[\n\r;`\{]|\|\|?|&&?)[\s\v]*[\s\v\"'-\(,@]*(?:[\"'\.-9A-Z_a-z]+/|(?:[\"'\x5c\^]*[0-9A-Z_a-z][\"'\x5c\^]*:.*|[ \"'\.-9A-Z\x5c\^-_a-z]*)\x5c)?[\"\^]*(?:o[\"\^]*(?:d[\"\^]*b[\"\^]*c[\"\^]*(?:a[\"\^]*d[\"\^]*3[\"\^]*2|c[\"\^]*o[\"\^]*n[\"\^]*f)|p[\"\^]*e[\"\^]*n[\"\^]*f[\"\^]*i[\"\^]*l[\"\^]*e[\"\^]*s)|p[\"\^]*(?:a[\"\^]*t[\"\^]*h[\"\^]*(?:[\s\v,\.-/;-<>].*|p[\"\^]*i[\"\^]*n[\"\^]*g)|e[\"\^]*r[\"\^]*(?:f[\"\^]*m[\"\^]*o[\"\^]*n|l(?:[\"\^]*(?:5|s[\"\^]*h))?)|h[\"\^]*p(?:[\"\^]*[57])?|i[\"\^]*n[\"\^]*g|k[\"\^]*g[\"\^]*m[\"\^]*g[\"\^]*r|o[\"\^]*(?:p[\"\^]*d|r[\"\^]*t[\"\^]*q[\"\^]*r[\"\^]*y|w[\"\^]*e[\"\^]*r[\"\^]*(?:c[\"\^]*f[\"\^]*g|s[\"\^]*h[\"\^]*e[\"\^]*l[\"\^]*l(?:[\"\^]*_[\"\^]*i[\"\^]*s[\"\^]*e)?))|r[\"\^]*(?:i[\"\^]*n[\"\^]*t[\"\^]*(?:[\s\v,\.-/;-<>].*|b[\"\^]*r[\"\^]*m)|n[\"\^]*(?:c[\"\^]*n[\"\^]*f[\"\^]*g|m[\"\^]*n[\"\^]*g[\"\^]*r)|o[\"\^]*m[\"\^]*p[\"\^]*t)|s[\"\^]*(?:e[\"\^]*x[\"\^]*e[\"\^]*c|f[\"\^]*i[\"\^]*l[\"\^]*e|g[\"\^]*e[\"\^]*t[\"\^]*s[\"\^]*i[\"\^]*d|i[\"\^]*n[\"\^]*f[\"\^]*o|k[\"\^]*i[\"\^]*l[\"\^]*l|l[\"\^]*(?:i[\"\^]*s[\"\^]*t|o[\"\^]*g[\"\^]*(?:g[\"\^]*e[\"\^]*d[\"\^]*o[\"\^]*n|l[\"\^]*i[\"\^]*s[\"\^]*t))|p[\"\^]*(?:a[\"\^]*s[\"\^]*s[\"\^]*w[\"\^]*d|i[\"\^]*n[\"\^]*g)|s[\"\^]*(?:e[\"\^]*r[\"\^]*v[\"\^]*i[\"\^]*c[\"\^]*e|h[\"\^]*u[\"\^]*t[\"\^]*d[\"\^]*o[\"\^]*w[\"\^]*n|u[\"\^]*s[\"\^]*p[\"\^]*e[\"\^]*n[\"\^]*d))|u[\"\^]*s[\"\^]*h[\"\^]*d|y[\"\^]*t[\"\^]*h[\"\^]*o[\"\^]*n(?:[\"\^]*(?:2|3(?:[\"\^]*m)?))?)|q[\"\^]*(?:g[\"\^]*r[\"\^]*e[\"\^]*p|p[\"\^]*r[\"\^]*o[\"\^]*c[\"\^]*e[\"\^]*s[\"\^]*s|u[\"\^]*e[\"\^]*r[\"\^]*y[\"\^]*[\s\v,\.-/;-<>].*|w[\"\^]*i[\"\^]*n[\"\^]*s[\"\^]*t[\"\^]*a)|r[\"\^]*(?:a[\"\^]*(?:r[\"\^]*[\s\v,\.-/;-<>].*|s[\"\^]*(?:d[\"\^]*i[\"\^]*a[\"\^]*l|p[\"\^]*h[\"\^]*o[\"\^]*n[\"\^]*e))|d[\"\^]*[\s\v,\.-/;-<>].*|e[\"\^]*(?:c[\"\^]*(?:d[\"\^]*i[\"\^]*s[\"\^]*c|o[\"\^]*v[\"\^]*e[\"\^]*r)|g[\"\^]*(?:[\s\v,\.-/;-<>].*|e[\"\^]*d[\"\^]*i[\"\^]*t|i[\"\^]*n[\"\^]*i|s[\"\^]*v[\"\^]*r[\"\^]*3[\"\^]*2)|k[\"\^]*e[\"\^]*y[\"\^]*w[\"\^]*i[\"\^]*z|(?:n[\"\^]*(?:a[\"\^]*m[\"\^]*e[\"\^]*)?|(?:p[\"\^]*l[\"\^]*a[\"\^]*c[\"\^]*e|s[\"\^]*e[\"\^]*t)[\"\^]*)[\s\v,\.-/;-<>].*)|m[\"\^]*(?:(?:d[\"\^]*i[\"\^]*r[\"\^]*)?[\s\v,\.-/;-<>].*|t[\"\^]*s[\"\^]*h[\"\^]*a[\"\^]*r[\"\^]*e)|o[\"\^]*(?:b[\"\^]*o[\"\^]*c[\"\^]*o[\"\^]*p[\"\^]*y|u[\"\^]*t[\"\^]*e[\"\^]*[\s\v,\.-/;-<>].*)|s[\"\^]*(?:t[\"\^]*r[\"\^]*u[\"\^]*i|y[\"\^]*n[\"\^]*c)|u[\"\^]*(?:b[\"\^]*y[\"\^]*(?:1(?:[\"\^]*[8-9])?|2[\"\^]*[0-2])|n[\"\^]*(?:a[\"\^]*s|d[\"\^]*l[\"\^]*l[\"\^]*3[\"\^]*2)))|s[\"\^]*(?:c[\"\^]*(?:h[\"\^]*t[\"\^]*a[\"\^]*s[\"\^]*k[\"\^]*s|l[\"\^]*i[\"\^]*s[\"\^]*t)|e[\"\^]*(?:c[\"\^]*p[\"\^]*o[\"\^]*l|l[\"\^]*e[\"\^]*c[\"\^]*t|t[\"\^]*(?:(?:x[\"\^]*)?[\s\v,\.-/;-<>].*|l[\"\^]*o[\"\^]*c[\"\^]*a[\"\^]*l))|f[\"\^]*c|h[\"\^]*(?:a[\"\^]*r[\"\^]*e|e[\"\^]*l[\"\^]*l[\"\^]*r[\"\^]*u[\"\^]*n[\"\^]*a[\"\^]*s|i[\"\^]*f[\"\^]*t|o[\"\^]*(?:r[\"\^]*t[\"\^]*c[\"\^]*u[\"\^]*t|w[\"\^]*(?:g[\"\^]*r[\"\^]*p|m[\"\^]*b[\"\^]*r)[\"\^]*s)|r[\"\^]*p[\"\^]*u[\"\^]*b[\"\^]*w|u[\"\^]*t[\"\^]*d[\"\^]*o[\"\^]*w[\"\^]*n)|i[\"\^]*g[\"\^]*v[\"\^]*e[\"\^]*r[\"\^]*i[\"\^]*f|l[\"\^]*(?:e[\"\^]*e[\"\^]*p|m[\"\^]*g[\"\^]*r)|(?:o|t[\"\^]*a)[\"\^]*r[\"\^]*t[\"\^]*[\s\v,\.-/;-<>].*|u[\"\^]*b[\"\^]*(?:i[\"\^]*n[\"\^]*a[\"\^]*c[\"\^]*l|s[\"\^]*t)|v[\"\^]*n|y[\"\^]*s[\"\^]*(?:d[\"\^]*m|k[\"\^]*e[\"\^]*y|t[\"\^]*e[\"\^]*m[\"\^]*(?:i[\"\^]*n[\"\^]*f[\"\^]*o|p[\"\^]*r[\"\^]*o[\"\^]*p[\"\^]*e[\"\^]*r[\"\^]*t[\"\^]*i[\"\^]*e[\"\^]*s[\"\^]*(?:a[\"\^]*d[\"\^]*v[\"\^]*a[\"\^]*n[\"\^]*c[\"\^]*e[\"\^]*d|d[\"\^]*a[\"\^]*t[\"\^]*a[\"\^]*e[\"\^]*x[\"\^]*e[\"\^]*c[\"\^]*u[\"\^]*t[\"\^]*i[\"\^]*o[\"\^]*n[\"\^]*p[\"\^]*r[\"\^]*e[\"\^]*v[\"\^]*e[\"\^]*n[\"\^]*t[\"\^]*i[\"\^]*o[\"\^]*n|(?:h[\"\^]*a[\"\^]*r[\"\^]*d[\"\^]*w[\"\^]*a[\"\^]*r|p[\"\^]*e[\"\^]*r[\"\^]*f[\"\^]*o[\"\^]*r[\"\^]*m[\"\^]*a[\"\^]*n[\"\^]*c)[\"\^]*e))))|t[\"\^]*(?:a[\"\^]*(?:k[\"\^]*e[\"\^]*o[\"\^]*w[\"\^]*n|s[\"\^]*k[\"\^]*(?:k[\"\^]*i[\"\^]*l[\"\^]*l|l[\"\^]*i[\"\^]*s[\"\^]*t|m[\"\^]*g[\"\^]*r|s[\"\^]*c[\"\^]*h[\"\^]*d))|(?:e[\"\^]*l[\"\^]*n[\"\^]*e|i[\"\^]*m[\"\^]*e[\"\^]*o[\"\^]*u|l[\"\^]*i[\"\^]*s|p[\"\^]*m[\"\^]*i[\"\^]*n[\"\^]*i)[\"\^]*t|r[\"\^]*(?:a[\"\^]*c[\"\^]*e[\"\^]*r[\"\^]*t|e[\"\^]*e)|s[\"\^]*(?:d[\"\^]*i[\"\^]*s[\"\^]*c[\"\^]*o|s[\"\^]*h[\"\^]*u[\"\^]*t[\"\^]*d)[\"\^]*n|y[\"\^]*p[\"\^]*e[\"\^]*(?:[\s\v,\.-/;-<>].*|p[\"\^]*e[\"\^]*r[\"\^]*f))|u[\"\^]*(?:n[\"\^]*(?:r[\"\^]*a[\"\^]*r|z[\"\^]*i[\"\^]*p)|s[\"\^]*(?:e[\"\^]*r[\"\^]*a[\"\^]*c[\"\^]*c[\"\^]*o[\"\^]*u[\"\^]*n[\"\^]*t[\"\^]*c[\"\^]*o[\"\^]*n[\"\^]*t[\"\^]*r[\"\^]*o[\"\^]*l[\"\^]*s[\"\^]*e[\"\^]*t[\"\^]*t[\"\^]*i[\"\^]*n[\"\^]*g[\"\^]*s|r[\"\^]*s[\"\^]*t[\"\^]*a[\"\^]*t))|v[\"\^]*(?:e[\"\^]*r[\"\^]*i[\"\^]*f[\"\^]*y|o[\"\^]*l[\"\^]*[\s\v,\.-/;-<>].*)|w[\"\^]*(?:a[\"\^]*i[\"\^]*t[\"\^]*f[\"\^]*o[\"\^]*r|e[\"\^]*v[\"\^]*t[\"\^]*u[\"\^]*t[\"\^]*i[\"\^]*l|g[\"\^]*e[\"\^]*t|h[\"\^]*o[\"\^]*a[\"\^]*m[\"\^]*i|i[\"\^]*n[\"\^]*(?:d[\"\^]*i[\"\^]*f[\"\^]*f|m[\"\^]*s[\"\^]*d[\"\^]*p|r[\"\^]*[ms]|v[\"\^]*a[\"\^]*r)|m[\"\^]*i[\"\^]*(?:c|m[\"\^]*g[\"\^]*m[\"\^]*t)|s[\"\^]*c[\"\^]*(?:r[\"\^]*i[\"\^]*p[\"\^]*t|u[\"\^]*i)|u[\"\^]*(?:a[\"\^]*(?:p[\"\^]*p|u[\"\^]*c[\"\^]*l[\"\^]*t)|s[\"\^]*a))|x[\"\^]*c[\"\^]*(?:a[\"\^]*c[\"\^]*l[\"\^]*s|o[\"\^]*p[\"\^]*y)|z[\"\^]*i[\"\^]*p[\"\^]*[\s\v,\.-/;-<>].*)(?:\.[\"\^]*[0-9A-Z_a-z]+)?\b"),
        re2.compile(r"(?i)(?:[\n\r;`\{]|\|\|?|&&?)[\s\v]*[\s\v\"'-\(,@]*(?:[\"'\.-9A-Z_a-z]+/|(?:[\"'\x5c\^]*[0-9A-Z_a-z][\"'\x5c\^]*:.*|[ \"'\.-9A-Z\x5c\^-_a-z]*)\x5c)?[\"\^]*(?:(?:a[\"\^]*(?:c|s[\"\^]*n[\"\^]*p)|e[\"\^]*(?:b[\"\^]*p|p[\"\^]*(?:a[\"\^]*l|c[\"\^]*s[\"\^]*v|s[\"\^]*n)|[tx][\"\^]*s[\"\^]*n)|f[\"\^]*(?:[cltw]|o[\"\^]*r[\"\^]*e[\"\^]*a[\"\^]*c[\"\^]*h)|i[\"\^]*(?:[cr][\"\^]*m|e[\"\^]*x|h[\"\^]*y|i|p[\"\^]*(?:a[\"\^]*l|c[\"\^]*s[\"\^]*v|m[\"\^]*o|s[\"\^]*n)|s[\"\^]*e|w[\"\^]*(?:m[\"\^]*i|r))|m[\"\^]*(?:a[\"\^]*n|[dipv]|o[\"\^]*u[\"\^]*n[\"\^]*t)|o[\"\^]*g[\"\^]*v|p[\"\^]*(?:o[\"\^]*p|u[\"\^]*s[\"\^]*h)[\"\^]*d|t[\"\^]*r[\"\^]*c[\"\^]*m|w[\"\^]*j[\"\^]*b)[\"\^]*[\s\v,\.-/;-<>].*|c[\"\^]*(?:(?:(?:d|h[\"\^]*d[\"\^]*i[\"\^]*r|v[\"\^]*p[\"\^]*a)[\"\^]*|p[\"\^]*(?:[ip][\"\^]*)?)[\s\v,\.-/;-<>].*|l[\"\^]*(?:(?:[cipv]|h[\"\^]*y)[\"\^]*[\s\v,\.-/;-<>].*|s)|n[\"\^]*s[\"\^]*n)|d[\"\^]*(?:(?:b[\"\^]*p|e[\"\^]*l|i[\"\^]*(?:f[\"\^]*f|r))[\"\^]*[\s\v,\.-/;-<>].*|n[\"\^]*s[\"\^]*n)|g[\"\^]*(?:(?:(?:(?:a[\"\^]*)?l|b[\"\^]*p|d[\"\^]*r|h[\"\^]*y|(?:w[\"\^]*m[\"\^]*)?i|j[\"\^]*b|[u-v])[\"\^]*|c[\"\^]*(?:[ims][\"\^]*)?|m[\"\^]*(?:o[\"\^]*)?|s[\"\^]*(?:n[\"\^]*(?:p[\"\^]*)?|v[\"\^]*))[\s\v,\.-/;-<>].*|e[\"\^]*r[\"\^]*r|p[\"\^]*(?:(?:s[\"\^]*)?[\s\v,\.-/;-<>].*|v))|l[\"\^]*s|n[\"\^]*(?:(?:a[\"\^]*l|d[\"\^]*r|[iv]|m[\"\^]*o|s[\"\^]*n)[\"\^]*[\s\v,\.-/;-<>].*|p[\"\^]*s[\"\^]*s[\"\^]*c)|r[\"\^]*(?:(?:(?:(?:b[\"\^]*)?p|e[\"\^]*n|(?:w[\"\^]*m[\"\^]*)?i|j[\"\^]*b|n[\"\^]*[ip])[\"\^]*|d[\"\^]*(?:r[\"\^]*)?|m[\"\^]*(?:(?:d[\"\^]*i[\"\^]*r|o)[\"\^]*)?|s[\"\^]*n[\"\^]*(?:p[\"\^]*)?|v[\"\^]*(?:p[\"\^]*a[\"\^]*)?)[\s\v,\.-/;-<>].*|c[\"\^]*(?:j[\"\^]*b[\"\^]*[\s\v,\.-/;-<>].*|s[\"\^]*n)|u[\"\^]*j[\"\^]*b)|s[\"\^]*(?:(?:(?:a[\"\^]*(?:j[\"\^]*b|l|p[\"\^]*s|s[\"\^]*v)|b[\"\^]*p|[civ]|w[\"\^]*m[\"\^]*i)[\"\^]*|l[\"\^]*(?:s[\"\^]*)?|p[\"\^]*(?:(?:j[\"\^]*b|p[\"\^]*s|s[\"\^]*v)[\"\^]*)?)[\s\v,\.-/;-<>].*|h[\"\^]*c[\"\^]*m|u[\"\^]*j[\"\^]*b))(?:\.[\"\^]*[0-9A-Z_a-z]+)?\b"),
        re2.compile(
            r"\$(?:\((?:.*|\(.*\))\)|\{.*\})|[<>]\(.*\)|/[0-9A-Z_a-z]*\[!?.+\]"),
        re2.compile(r"(?i)(?:^|=)[\s\v]*(?:t[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?i[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?m[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?e|[\$\{]|(?:[\s\v]*\(|!)[\s\v]*|[0-9A-Z_a-z]+=(?:[^\s\v]*|\$(?:.*|.*)|[<>].*|'.*'|\".*\")[\s\v]+)*[\s\v]*[\"']*(?:[\"'-\+\--9\?A-\]_a-z\|]+/)?[\"'\x5c]*(?:7[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?z(?:[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[ar])?|(?:b[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?z|x)[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?z|c[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:c|s[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?h)|e[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?n[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?v|(?:g[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?c|n)[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?c|(?:h[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?u|r[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?c)[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?p|i[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?r[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?b|[kz][\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?s[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?h|l[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?[sz]|p[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:h[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?p|x[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?z)|s[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?(?:c[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?p|e[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?d|(?:s[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?)?h|v[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?n)|w[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?3[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?m)[\s\v&\)<>\|]"),
        re2.compile(r"!-\d"),
        re2.compile(r"^\(\s*\)\s+{"),
        re2.compile(r"^\(\s*\)\s+{"),
        re2.compile(
            r"\ba[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?l[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?i[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?a[\"'\)\[-\x5c]*(?:(?:(?:\|\||&&)[\s\v]*)?\$[!#\(\*\-0-9\?-@_a-\{]*)?\x5c?s\b[\s\v]+[!-\"%',0-9@-Z_a-z]+=[^\s\v]"),
        re2.compile(r"java\.lang\.(?:runtime|processbuilder)"),
        re2.compile(r"(?:runtime|processbuilder)"),
        re2.compile(r"(?:unmarshaller|base64data|java\.)"),
        re2.compile(r"(?:clonetransformer|forclosure|instantiatefactory|instantiatetransformer|invokertransformer|prototypeclonefactory|prototypeserializationfactory|whileclosure|getproperty|filewriter|xmldecoder)"),
        re2.compile(r"(?:runtime|processbuilder)"),
        re2.compile(r".*\.(?:jsp|jspx)\.*$"),
        re2.compile(r"\xac\xed\x00\x05"),
        re2.compile(r"(?:rO0ABQ|KztAAU|Cs7QAF)"),
        re2.compile(r"(?:clonetransformer|forclosure|instantiatefactory|instantiatetransformer|invokertransformer|prototypeclonefactory|prototypeserializationfactory|whileclosure|getproperty|filewriter|xmldecoder)"),
        re2.compile(r"java\b.+(?:runtime|processbuilder)"),
        re2.compile(r"(?:class\.module\.classLoader\.resources\.context\.parent\.pipeline|springframework\.context\.support\.FileSystemXmlApplicationContext)"),
        re2.compile(r"(?:cnVudGltZQ|HJ1bnrpbWU|BydW50aW1l|cHJvY2Vzc2J1aWxkZXI|HByb2Nlc3NidWlsZGVy|Bwcm9jZXNzYnVpbGrlcg|Y2xvbmV0cmFuc2Zvcm1lcg|GNsb25ldHJhbnNmb3JtZXI|BjbG9uZXryYW5zZm9ybWVy|Zm9yY2xvc3VyZQ|GZvcmNsb3N1cmU|Bmb3JjbG9zdXJl|aW5zdGFudGlhdGVmYWN0b3J5|Gluc3rhbnrpYXrlZmFjdG9yeQ|BpbnN0YW50aWF0ZWZhY3rvcnk|aW5zdGFudGlhdGV0cmFuc2Zvcm1lcg|Gluc3rhbnrpYXrldHJhbnNmb3JtZXI|BpbnN0YW50aWF0ZXryYW5zZm9ybWVy|aW52b2tlcnryYW5zZm9ybWVy|Gludm9rZXJ0cmFuc2Zvcm1lcg|BpbnZva2VydHJhbnNmb3JtZXI|cHJvdG90eXBlY2xvbmVmYWN0b3J5|HByb3rvdHlwZWNsb25lZmFjdG9yeQ|Bwcm90b3r5cGVjbG9uZWZhY3rvcnk|cHJvdG90eXBlc2VyaWFsaXphdGlvbmZhY3rvcnk|HByb3rvdHlwZXNlcmlhbGl6YXrpb25mYWN0b3J5|Bwcm90b3r5cGVzZXJpYWxpemF0aW9uZmFjdG9yeQ|d2hpbGVjbG9zdXJl|HdoaWxlY2xvc3VyZQ|B3aGlsZWNsb3N1cmU)"),
        re2.compile(r"(?i)(?:\$|&dollar;?)(?:\{|&l(?:brace|cub);?)"),
        re2.compile(
            r"(?:<\?(?:[^x]|x[^m]|xm[^l]|xml[^\s]|xml$|$)|<\?php|\[(?:/|\x5c)?php\])"),
        re2.compile(r".*\.ph(?:p\d*|tml|ar|ps|t|pt)\.*$"),
        re2.compile(
            r"(?i)php://(?:std(?:in|out|err)|(?:in|out)put|fd|memory|temp|filter)"),
        re2.compile(
            r"(?:bzip2|expect|glob|ogg|(?:ph|r)ar|ssh2(?:.(?:s(?:hell|(?:ft|c)p)|exec|tunnel))?|z(?:ip|lib))://"),
        re2.compile(r"(?i)\b\(?[\"']*(?:a(?:rray_(?:(?:diff|intersect)_u(?:assoc|key)|filter|map|reduce|u(?:diff|intersect)(?:_u?assoc)?)|ssert(?:_options)?)|b(?:(?:ase64_en|son_(?:de|en))code|zopen)|c(?:hr|onvert_uuencode|reate_function|url_(?:exec|file_create|init))|(?:debug_backtrac|json_(?:de|en)cod|tmpfil)e|e(?:rror_reporting|scapeshell(?:arg|cmd)|val|x(?:ec|if_(?:imagetype|read_data|t(?:agname|humbnail))))|f(?:i(?:le(?:(?:_exist|perm)s|(?:[acm]tim|inod)e|group)?|nfo_open)|open|(?:pu|unction_exis)ts|tp_(?:connec|ge|nb_(?:ge|pu)|pu)t|write)|g(?:et(?:_(?:c(?:fg_va|urrent_use)r|meta_tags)|(?:cw|lastmo)d|env|imagesize|my(?:[gpu]id|inode))|lob|z(?:compress|(?:(?:defla|wri)t|encod|fil)e|open|read))|h(?:(?:ash_(?:(?:hmac|update)_)?|ighlight_)file|e(?:ader_register_callback|x2bin)|tml(?:_entity_decode|entities|specialchars(?:_decode)?))|i(?:mage(?:2?wbmp|createfrom(?:gif|(?:jpe|pn)g|wbmp|x[bp]m)|g(?:d2?|if)|(?:jpe|pn)g|xbm)|ni_(?:get(?:_all)?|set)|ptcembed|s_(?:dir|(?:(?:execut|read|write?)ab|fi)le)|terator_apply)|m(?:b_(?:ereg(?:_(?:match|replace(?:_callback)?)|i(?:_replace)?)?|parse_str)|(?:d5|ove_uploaded)_file|ethod_exists|kdir|ysql_query)|o(?:b_(?:clean|end_(?:clean|flush)|flush|get_(?:c(?:lean|ontents)|flush)|start)|dbc_(?:connect|exec(?:ute)?|result(?:_all)?)|pendir)|p(?:a(?:rse_(?:ini_file|str)|ssthru)|g_(?:connect|(?:execut|prepar)e|query)|hp(?:_(?:strip_whitespac|unam)e|info|version)|o(?:pen|six_(?:get(?:(?:e[gu]|g)id|login|pwnam)|kill|mk(?:fifo|nod)|ttyname))|r(?:eg_(?:match(?:_all)?|replace(?:_callback(?:_array)?)?|split)|int_r|oc_(?:(?:clos|nic|terminat)e|get_status|open))|utenv)|r(?:awurl(?:de|en)code|e(?:ad(?:_exif_data|dir|(?:gz)?file)|(?:gister_(?:shutdown|tick)|name)_function)|unkit_(?:constant_(?:add|redefine)|(?:function|method)_(?:add|copy|re(?:defin|nam)e)))|s(?:e(?:ssion_s(?:et_save_handler|tart)|t(?:_(?:e(?:rror|xception)_handler|include_path|magic_quotes_runtime)|defaultstub))|h(?:a1_fil|ow_sourc)e|implexml_load_(?:file|string)|ocket_c(?:onnect|reate)|pl_autoload_register|qlite_(?:(?:(?:array|single|unbuffered)_)?query|create_(?:aggregate|function)|exec|p?open)|tr(?:eam_(?:context_create|socket_client)|ipc?slashes|rev)|ystem)|u(?:[ak]?sort|n(?:pack|serialize)|rl(?:de|en)code)|var_dump)(?:/(?:\*.*\*/|/.*)|#.*[\s\v]|\")*[\"']*\)?[\s\v]*\(.*\)"),
        re2.compile(r"[oOcC]:\d+:\".+?\":\d+:{.*}"),
        re2.compile(
            r"\$+(?:[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*|\s*{.+})(?:\s|\[.+\]|{.+}|/\*.*\*/|//.*|#.*)*\(.*\)"),
        re2.compile(
            r"(?:\((?:.+\)(?:[\"'][\-0-9A-Z_a-z]+[\"'])?\(.+|[^\)]*string[^\)]*\)[\s\v\"'\--\.0-9A-\[\]_a-\{\}]+\([^\)]*)|(?:\[[0-9]+\]|\{[0-9]+\}|\$[^\(-\),\.-/;\x5c]+|[\"'][\-0-9A-Z\x5c_a-z]+[\"'])\(.+)\);"),
        re2.compile(r"_(?:\$\$ND_FUNC\$\$_|_js_function)|(?:\beval|new[\s\v]+Function[\s\v]*)\(|String\.fromCharCode|function\(\)\{|this\.constructor|module\.exports=|\([\s\v]*[^0-9A-Z_a-z]child_process[^0-9A-Z_a-z][\s\v]*\)|process(?:\.(?:(?:a(?:ccess|ppendfile|rgv|vailability)|c(?:aveats|h(?:mod|own)|(?:los|opyfil)e|p|reate(?:read|write)stream)|ex(?:ec(?:file)?|ists)|f(?:ch(?:mod|own)|data(?:sync)?|s(?:tat|ync)|utimes)|inodes|l(?:chmod|ink|stat|utimes)|mkd(?:ir|temp)|open(?:dir)?|r(?:e(?:ad(?:dir|file|link|v)?|name)|m)|s(?:pawn(?:file)?|tat|ymlink)|truncate|u(?:n(?:link|watchfile)|times)|w(?:atchfile|rite(?:file|v)?))(?:sync)?(?:\.call)?\(|binding|constructor|env|global|main(?:Module)?|process|require)|\[[\"'`](?:(?:a(?:ccess|ppendfile|rgv|vailability)|c(?:aveats|h(?:mod|own)|(?:los|opyfil)e|p|reate(?:read|write)stream)|ex(?:ec(?:file)?|ists)|f(?:ch(?:mod|own)|data(?:sync)?|s(?:tat|ync)|utimes)|inodes|l(?:chmod|ink|stat|utimes)|mkd(?:ir|temp)|open(?:dir)?|r(?:e(?:ad(?:dir|file|link|v)?|name)|m)|s(?:pawn(?:file)?|tat|ymlink)|truncate|u(?:n(?:link|watchfile)|times)|w(?:atchfile|rite(?:file|v)?))(?:sync)?|binding|constructor|env|global|main(?:Module)?|process|require)[\"'`]\])|(?:binding|constructor|env|global|main(?:Module)?|process|require)\[|console(?:\.(?:debug|error|info|trace|warn)(?:\.call)?\(|\[[\"'`](?:debug|error|info|trace|warn)[\"'`]\])|require(?:\.(?:resolve(?:\.call)?\(|main|extensions|cache)|\[[\"'`](?:(?:resolv|cach)e|main|extensions)[\"'`]\])"),
        re2.compile(r"(?:close|exists|fork|(?:ope|spaw)n|re(?:ad|quire)|w(?:atch|rite))[\s\v]*\("),
        re2.compile(r"Process[\s\v]*\.[\s\v]*spawn[\s\v]*\(")
    ],
    "路径穿越":[
        re2.compile(r"(?i)(?:[/\x5c]|%(?:2(?:f|5(?:2f|5c|c(?:1%259c|0%25af))|%46)|5c|c(?:0%(?:[2aq]f|5c|9v)|1%(?:[19p]c|8s|af))|(?:bg%q|(?:e|f(?:8%8)?0%8)0%80%a)f|u(?:221[5-6]|EFC8|F025|002f)|%3(?:2(?:%(?:%6|4)6|F)|5%%63)|1u)|0x(?:2f|5c))(?:\.(?:%0[0-1]|\?)?|\?\.?|%(?:2(?:(?:5(?:2|c0%25a))?e|%45)|c0(?:\.|%[25-6ae-f]e)|u(?:(?:ff0|002)e|2024)|%32(?:%(?:%6|4)5|E)|(?:e|f(?:(?:8|c%80)%8)?0%8)0%80%ae)|0x2e){2,3}(?:[/\x5c]|%(?:2(?:f|5(?:2f|5c|c(?:1%259c|0%25af))|%46)|5c|c(?:0%(?:[2aq]f|5c|9v)|1%(?:[19p]c|8s|af))|(?:bg%q|(?:e|f(?:8%8)?0%8)0%80%a)f|u(?:221[5-6]|EFC8|F025|002f)|%3(?:2(?:%(?:%6|4)6|F)|5%%63)|1u)|0x(?:2f|5c))"),
        re2.compile(r"(?:(?:^|[\x5c/;])\.{2,3}[\x5c/;]|[\x5c/;]\.{2,3}(?:[\x5c/;]|$))")
    ],
    # "文件包含":[
    #     re2.compile(r"(?i)(?:(?:url|jar):)?(?:a(?:cap|f[ps]|ttachment)|b(?:eshare|itcoin|lob)|c(?:a(?:llto|p)|id|vs|ompress.(?:zlib|bzip2))|d(?:a(?:v|ta)|ict|n(?:s|tp))|e(?:d2k|xpect)|f(?:(?:ee)?d|i(?:le|nger|sh)|tps?)|g(?:it|o(?:pher)?|lob)|h(?:323|ttps?)|i(?:ax|cap|(?:ma|p)ps?|rc[6s]?)|ja(?:bbe)?r|l(?:dap[is]?|ocal_file)|m(?:a(?:ilto|ven)|ms|umble)|n(?:e(?:tdoc|ws)|fs|ntps?)|ogg|p(?:aparazzi|h(?:ar|p)|op(?:2|3s?)|r(?:es|oxy)|syc)|r(?:mi|sync|tm(?:f?p)?|ar)|s(?:3|ftp|ips?|m(?:[bs]|tps?)|n(?:ews|mp)|sh(?:2(?:.(?:s(?:hell|(?:ft|c)p)|exec|tunnel))?)?|vn(?:\+ssh)?)|t(?:e(?:amspeak|lnet)|ftp|urns?)|u(?:dp|nreal|t2004)|v(?:entrilo|iew-source|nc)|w(?:ebcal|ss?)|x(?:mpp|ri)|zip):\/(?:[^@]+@)?([^\/]*)")
    # ]
}
re_replace_data = {
    'proxy': '(?P<proxy>.*?)',
    'date': '(?P<date>.*?)',
    'method': '(?P<method>.*?)',
    'uri': '(?P<uri>.*?)',
    'protocol': '(?P<protocol>.*?)',
    'body': '(?P<body>.*?)',
    'code': '(?P<code>\d+)',
    'size': '(?P<size>\d+)',
    'referer': '(?P<referer>.*?)',
    'ua': '(?P<ua>.*?)',
    'remote': '(?P<remote>((?:(?:25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d)))\.){3}(?:25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d)))))',
    '^': '.*?'
}

def worker(q,progress,task):
    while True:
        if q.empty():
            return
        else:
            line=q.get()

            global completed
            global results
            lock.acquire()
            completed += 1
            lock.release()
            match = False
            data = re2.match(log_format, line.strip())
            if data is not None:
                date = data.group('date')
                uri = parse.unquote(data.group('uri'))
                remote = data.group('remote')
                
                uri_data, path = parse.urlparse(
                    uri).query, parse.urlparse(uri).path
                if path.split('.') not in white_exts and remote not in white_ips and path not in white_paths:
                    for os_file in os_file_paths:
                        if os_file in path:
                            print(f"[bold dark_red][!][/bold dark_red] 检测到 [bold turquoise4]{remote}[/bold turquoise4] 于 [bold turquoise4]{date}[/bold turquoise4] 疑似[bold turquoise4]读取本地文件 {os_file}")
                            results.append([date, remote, '本地文件读取', path, 'uri', path, path.replace(os_file, '[bold dark_red]%s[/bold dark_red]'%os_file)])
                            progress.update(task, completed=completed)
                            match =True
                            break
                    if not match:
                        method = data.group('method')
                        body = parse.unquote(data.group('body'))
                        args_data = parse.parse_qsl(
                            uri_data.encode().decode('unicode_escape'))
                        if method.lower() == 'post' and body != '':
                            parse_data = parse.parse_qsl(
                                body.encode().decode('unicode_escape'))
                            if len(parse_data)>0:
                                args_data+=parse_data
                            else:    
                                args_data+=[('post_data',body)]
                        # if path!='':
                        #     args_data+=[('uri',path)]
                        for item in args_data:
                            if len(item) != 2:
                                continue
                            for key in rules.keys():
                                for pattern in rules[key]:
                                    res = re2.search(pattern, item[1])
                                    if res:
                                        print(f"[bold dark_red][!][/bold dark_red] 检测到 [bold turquoise4]{remote}[/bold turquoise4] 于 [bold turquoise4]{date}[/bold turquoise4] 发起 [bold turquoise4]{key}[/bold turquoise4] 攻击")
                                        results.append(
                                            [date, remote, key, path, item[0], item[1], item[1].replace(res.group(), '[bold dark_red]%s[/bold dark_red]' % res.group())])
                                        match = True
                                        break
                                if match:
                                    break
                            if match:
                                break
            progress.update(task, completed=completed)



if __name__ == '__main__':
    print(r'''
                                                                                                                                             
,--.   ,--.       ,--.         ,---.    ,--.    ,--.                ,--.        ,------.           ,--.                 ,--.                 
|  |   |  | ,---. |  |-.      /  O  \ ,-'  '-.,-'  '-. ,--,--. ,---.|  |,-.     |  .-.  \  ,---. ,-'  '-. ,---.  ,---.,-'  '-. ,---. ,--.--. 
|  |.'.|  || .-. :| .-. '    |  .-.  |'-.  .-''-.  .-'' ,-.  || .--'|     /     |  |  \  :| .-. :'-.  .-'| .-. :| .--''-.  .-'| .-. ||  .--' 
|   ,'.   |\   --.| `-' |    |  | |  |  |  |    |  |  \ '-'  |\ `--.|  \  \     |  '--'  /\   --.  |  |  \   --.\ `--.  |  |  ' '-' '|  |    
'--'   '--' `----' `---'     `--' `--'  `--'    `--'   `--`--' `---'`--'`--'    `-------'  `----'  `--'   `----' `---'  `--'   `---' `--'    
                                                                                                                                             
                                                                                                                                
                                                                                                                           v1.0 Code By 1fe1se
    ''')
    parser = argparse.ArgumentParser(
        description="用于检测web日志中的攻击行为", formatter_class=argparse.RawTextHelpFormatter)
    parser.add_argument('-f', '--file', dest='filename',
                        help='日志文件路径', required=True, type=pathlib.Path)
    parser.add_argument('-l', '--log-format', dest='format', required=True,
                        help='按照日志文件中单条日志组成结构构造日志格式，关键词如下:\nremote:客户端IP地址\ndate:日期\nproxy:代理IP\nmethod:请求方法\nuri:请求路径\nprotocol:协议版本\nbody:post数据\ncode:响应码\nsize:响应大小\nreferer:请求头referer\nua:请求头user-agent\n^:无关值')
    parser.add_argument('-t', '--threads', dest='thread_num',
                        type=int, default=4,help='线程数量，默认为4')
    parser.add_argument('--exclude-ips', dest='white_ips',
                        help='白名单ip,逗号分隔')
    parser.add_argument('--exclude-paths', dest='white_paths',
                        help='白名单路径,逗号分隔')
    parser.add_argument('-oC', '--output-csv', dest='oC',
                        type=pathlib.Path, help='结果导出CSV文件')
    parser.add_argument('-oJ', '--output-json', dest='oJ',
                        type=pathlib.Path, help='结果导出JSON文件')
    args = parser.parse_args()
    filename = args.filename
    thread_num = args.thread_num
    log_format = args.format.replace('[', '\[').replace(']', '\]')
    rule_statistics = '\t'.join(["[bold turquoise4]%s-%d" %
                                (key, len(rules[key])) for key in rules.keys()])
    print(f"[bold dark_goldenrod][+] 检测类型及规则数量: {rule_statistics}")
    if not ('date' in log_format and 'remote' in log_format and 'uri' in log_format):
        sys.exit('[!] 日志格式至少包括 date remote uri三个字段')
    for key in re_replace_data.keys():
        if key in log_format:
            log_format = log_format.replace(key, re_replace_data[key])
    white_exts = ['js','css','png','jpg','svg','bmp','jpeg','gif']
    white_ips = args.white_ips.split(',') if args.white_ips is not None else []
    white_paths=args.white_paths.split(',') if args.white_paths is not None else []
    results=[]
    completed=0
    lock=Lock()
    line_count = 0
    q=Queue()
    threads=[]
    with open(filename, 'r') as f:
        for line in f:
            q.put(line.strip())
            line_count+=1
    print(f"[bold dark_goldenrod][+] 日志文件:[/bold dark_goldenrod] [bold turquoise4]{filename}[/bold turquoise4]")
    print(f"[bold dark_goldenrod][+] 日志条数:[/bold dark_goldenrod] [bold turquoise4]{line_count}")
    print(f"[bold dark_goldenrod][+] IP白名单:[/bold dark_goldenrod] [bold turquoise4]{white_ips}")
    print(f"[bold dark_goldenrod][+] 路径白名单:[/bold dark_goldenrod] [bold turquoise4]{white_paths}")
    with Progress(TextColumn("[red]{task.description}"), BarColumn(), MofNCompleteColumn(), TimeElapsedColumn()) as progress:
        task = progress.add_task("[bold dark_red]日志分析进度", total=line_count)
        for i in range(thread_num):
            t=Thread(target=worker, args=(q,progress,task),daemon=True)
            threads.append(t)
        for i in range(thread_num):
            threads[i].start()
        # Send thirty task requests to the worker.
        for i in range(thread_num):
            threads[i].join()
    attackers = set([i[1] for i in results])
    results = sorted(results,key=lambda x:x[0])
    print(f'[bold dark_red][+] 攻击开始时间[/bold dark_red][bold turquoise4] {results[0][0]}')
    print(f'[bold dark_red][+] 攻击结束时间[/bold dark_red][bold turquoise4] {results[-1][0]}')
    print(f'[bold dark_red][+] 检测到[/bold dark_red][bold turquoise4] {len(attackers)} [/bold turquoise4][bold dark_red]个IP共发起[/bold dark_red][bold turquoise4] {len(results)} [/bold turquoise4][bold dark_red]次攻击[/bold dark_red]')
    table = Table(title="攻击检测结果", show_lines=True)
    table.add_column("时间")
    table.add_column("攻击IP", style="bold dark_goldenrod")
    table.add_column("攻击类型", style="bold dark_red")
    table.add_column("URI")
    table.add_column("参数")
    table.add_column("匹配值")
    for item in results:
        table.add_row(*(item[:-2]+item[-1:]))
    print(table)
    if args.oC:
        if str(args.oC).endswith('.csv'):
            cf = args.oC
        else:
            cf = '%s_%s.csv' % (
                datetime.datetime.now().strftime('%Y-%m-%d'), uuid.uuid4())
            print(f'[bold dark_red][!] 导出文件只能为csv格式,将自动保存到 {pathlib.Path(cf).absolute()}')
        try:
            with open(cf, 'w', newline='', encoding='utf-8') as csv_file:
                writer = csv.writer(csv_file)
                writer.writerow(['时间', '攻击IP', '攻击类型', 'URI', '参数', '值'])
                for item in results:
                    if line != '':
                        writer.writerow(item[:-1])
            print(f'[bold dark_goldenrod][+] 检测结果已保存至 [bold turquoise4] {pathlib.Path(cf).absolute()}')
        except:
            print('[bold dark_red][!] csv文件导出失败')
    if args.oJ:
        if str(args.oJ).endswith('.json'):
            jf = args.oJ
        else:
            jf = '%s_%s.json' % (
                datetime.datetime.now().strftime('%Y-%m-%d'), uuid.uuid4())
            print(f'[bold dark_red][!] 导出文件只能为json格式,将自动保存到 {pathlib.Path(jf).absolute()}')
        
        try:
            with open(jf, 'w', encoding='utf-8') as json_file:
                data = [dict(zip(['date', 'ip', 'type', 'uri', 'args',
                                'value'], item[:-1])) for item in results]
                json.dump({'data': data}, json_file)
            print(f'[bold dark_goldenrod][+] 检测结果已保存至 [bold turquoise4] {pathlib.Path(jf).absolute()}')
        except:
            print('[bold dark_red][!] json文件导出失败')
